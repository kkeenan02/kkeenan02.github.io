<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL on Data Pragmatist</title>
    <link>https://kkeenan02.github.io/tags/sql/</link>
    <description>Recent content in SQL on Data Pragmatist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 12 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kkeenan02.github.io/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>High Throughput lookups in AWS Redshift</title>
      <link>https://kkeenan02.github.io/post/2018-05-12_high_throughput_redshift_lookup/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kkeenan02.github.io/post/2018-05-12_high_throughput_redshift_lookup/</guid>
      <description> Recently, I had a seemingly simple task, where I effectively wanted to lookup a large list of value pairs in a large redshift table containing ~5 billion rows. I immediatly recalled that the IN clause would probably be useful here. Below is a mock example of how this approach might look:
select val_1, val_2, tablefield_1, tablefield_2, ..., tablefield_n from target_table where (val1, val2) IN ((value_1, value_1), (value_, value_2), ... (value_n, value_n)) </description>
    </item>
    
  </channel>
</rss>